import * as XLSX from "xlsx";
import { readFileSync, writeFileSync } from "fs";

// —á–∏—Ç–∞–µ–º –±–∏–Ω–∞—Ä–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Excel
const fileBuffer = readFileSync("cables.xlsx");

// —Å–æ–∑–¥–∞—ë–º workbook
const workbook = XLSX.read(fileBuffer, { type: "buffer" });

// –ø–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
const sheetName = workbook.SheetNames[7];
const sheet = workbook.Sheets[sheetName];

// –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON
let data = XLSX.utils.sheet_to_json(sheet);

// üß† –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—è compatibleSuspensions –∏ compatibleSurfaces
data = data.map(item => {
    const fixedItem = { ...item };

    const parseMaybeArray = (value) => {
        if (typeof value === "string") {
            try {
                const parsed = JSON.parse(value);
                return Array.isArray(parsed) ? parsed : [parsed];
            } catch {
                // –ü–æ–ø—Ä–æ–±—É–µ–º –≤—Ä—É—á–Ω—É—é —É–±—Ä–∞—Ç—å —Å–∫–æ–±–∫–∏ –∏ –∫–∞–≤—ã—á–∫–∏
                return value
                    .replace(/[\[\]"]/g, "")
                    .split(",")
                    .map(v => v.trim())
                    .filter(Boolean);
            }
        }
        return Array.isArray(value) ? value : [value];
    };

    if ("compatibleSuspensions" in fixedItem) {
        fixedItem.compatibleSuspensions = parseMaybeArray(fixedItem.compatibleSuspensions);
    }

    if ("compatibleSurfaces" in fixedItem) {
        fixedItem.compatibleSurfaces = parseMaybeArray(fixedItem.compatibleSurfaces);
    }

    if ("oklType" in fixedItem) {
        fixedItem.oklType = parseMaybeArray(fixedItem.oklType);
    }

    return fixedItem;
});

console.log(data);

// —Å–æ—Ö—Ä–∞–Ω—è–µ–º JSON –≤ —Ñ–∞–π–ª
writeFileSync("cables.json", JSON.stringify(data, null, 2), "utf8");
console.log("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: OKL_DB.json —Å–æ–∑–¥–∞–Ω");

/*
import * as XLSX from "xlsx";
import { readFileSync, writeFileSync } from "fs";

// —á–∏—Ç–∞–µ–º –±–∏–Ω–∞—Ä–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Excel
const fileBuffer = readFileSync("OKL_DB.xlsx");

// —Å–æ–∑–¥–∞—ë–º workbook
const workbook = XLSX.read(fileBuffer, { type: "buffer" });

// –ø–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
const sheetName = workbook.SheetNames[0];
const sheet = workbook.Sheets[sheetName];

// –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON
const data = XLSX.utils.sheet_to_json(sheet);

console.log(data);

// —Å–æ—Ö—Ä–∞–Ω—è–µ–º JSON –≤ —Ñ–∞–π–ª
writeFileSync("OKL_DB.json", JSON.stringify(data, null, 2), "utf8");
console.log("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: OKL.json —Å–æ–∑–¥–∞–Ω");
 */
